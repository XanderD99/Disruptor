name: Dependencies

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  update-go-dependencies:
    name: Update Go Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libopus-dev pkg-config

      - name: Update dependencies
        run: |
          go get -u ./...
          go mod tidy

      - name: Make scripts executable
        run: chmod +x ci/scripts/*.sh

      - name: Run tests
        run: ./ci/scripts/test.sh

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update Go dependencies"
          title: "ðŸ”„ Update Go Dependencies"
          body: |
            ## ðŸ”„ Automated Dependency Update

            This PR updates Go dependencies to their latest versions.

            ### Changes
            - Updated Go module dependencies
            - Ran `go mod tidy`
            - All tests passing âœ…

            ### Testing
            - [x] Unit tests pass
            - [x] Build succeeds

            **Note**: This PR was created automatically by GitHub Actions.
          branch: chore/update-dependencies
          delete-branch: true

  # dependabot-auto-merge:
  #   name: Auto-merge Dependabot PRs
  #   runs-on: ubuntu-latest
  #   if: github.actor == 'dependabot[bot]'
  #   steps:
  #     - name: Dependabot metadata
  #       id: metadata
  #       uses: dependabot/fetch-metadata@v2
  #       with:
  #         github-token: "${{ secrets.GITHUB_TOKEN }}"

  #     - name: Auto-merge patch updates
  #       if: steps.metadata.outputs.update-type == 'version-update:semver-patch'
  #       run: gh pr merge --auto --merge "$PR_URL"
  #       env:
  #         PR_URL: ${{github.event.pull_request.html_url}}
  #         GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
